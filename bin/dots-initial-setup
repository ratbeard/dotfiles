#!/bin/bash -x -e
# https://github.com/nixme/dotfiles/blob/master/bin/setup-machine
# https://github.com/mathiasbynens/dotfiles
# https://github.com/holman/dotfiles
#
# Set up my preferred OS defaults, common programs, and general environment.
#
# OS X 10.8 Mountain Lion only for now.
#
# Inspired by https://github.com/mathiasbynens/dotfiles/blob/master/.{osx,brew}
#

# By this point the following should be true:
# - Xcode installed
# - Xcode CLI tools installed
# - Computer has been named via System Preferences > Sharing

# Preauthorize with keep-alive.
sudo -v
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

mkdir -p ~/code


################################### HOMEBREW ###################################

###ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
#brew update
#brew upgrade

brew install wget --enable-iri
#brew install git
brew install tmux
brew install most
brew install tree
brew install readline
brew install nodejs
#brew install reattach-to-user-namepsace
brew install ack 
brew install heroku-toolbelt
brew install postgres
brew install coreutils
brew install findutils
brew install hub
brew install ruby-build
brew install rbenv

# Latest XCode CLI tools do not include regular GCC, only LLVM-GCC. So install
# gcc-4.2 based on Apple's latest sources.
brew tap homebrew/dupes
brew install apple-gcc42

# Install native apps
brew install phinze/cask/brew-cask
brew tap caskroom/versions

function brew cask install() {
	brew cask install "${@}" 2> /dev/null
}


brew cask install google-chrome
brew cask install google-chrome-canary
brew cask install imageoptim
brew cask install iterm2
brew cask install macvim
brew cask install the-unarchiver
brew cask install transmission
brew cask install virtualbox
brew cask install vlc
brew cask install adium
brew cask install limechat
brew cask install cyberduck
brew cask install totalterminal
brew cask install sonos
brew cask install java7
brew install maven
brew cask install google-hangouts
brew cask install grandperspective
brew cask install spotify
brew cask install speedlimit
brew cask install alfred
brew cask install jitsi
brew cask install flash
brew cask install spectacle # window manager
brew cask install adapter # Adapter Converts Video, Audio and Images
brew cask install alib1 # trippy screensaver
brew cask install all2mp3
brew cask install arduino
brew cask install awareness # Subtle awareness of time spent on the computer
brew cask install beardedspice # Mac Media Keys for the Masses


# brew cask search > /tmp/a
# sed -n 112,212p /tmp/a | xargs brew cask home
#
# someday, maybe:
#
# airdisplay
# amethyst # tiling window manager
# Apptivate # simpler alfred
# CCMenu # continuous integration status bar
# charlesproxy # see http requests
# cocoadialog # use guy elements in shell scripts
# cloudapp # dat cloud
#brew cask install tor-browser
#brew cask install ukelele
#brew cask install imagealpha
#brew cask install miro-video-converter
#brew cask install dropbox

################################ ZSH & DOTFILES ################################

brew install --disable-etcdir zsh
homebrew_zsh=/usr/local/bin/zsh
echo $homebrew_zsh | sudo tee -a /etc/shells
sudo chsh -s $hombrew_zsh $USER

#if [ ! -d ~/.dotfiles ]; then
#  curl https://raw.github.com/nixme/dotfiles/master/bin/install-dotfiles | sh
#fi

##################################### RUBY #####################################

ruby18=1.8.7-p375
ruby19=1.9.3-p545                   # Current patchlevels
ruby20=2.1.1
global_gems="bundler pry"   		 # Gems to install globally for each ruby

# Compile with real GCC and readline. Clang or gcc-llvm make for a buggy MRI,
# and libedit messes up colored prompts.
export CC=gcc-4.2
export RUBY_CONFIGURE_OPTS="--with-readline-dir=`brew --prefix readline`"
rbenv install $ruby18
rbenv install $ruby19
rbenv install $ruby20
eval "$(rbenv init -)"

rbenv global $ruby20                # Default to Ruby 2.0
rbenv rehash

rbenv shell $ruby18
gem install $global_gems
rbenv shell $ruby19
gem install $global_gems
rbenv shell $ruby20
gem install $global_gems


################################### SETTINGS ###################################

# Expand save and print panels by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode  -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint     -bool true

# Save to disk (not iCloud) by default
#defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud   -bool false

# Automatically quit printer app once the print jobs complete
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

# Enable access for assistive devices
echo -n 'a' | sudo tee /private/var/db/.AccessibilityAPIEnabled > /dev/null 2>&1
sudo chmod 444 /private/var/db/.AccessibilityAPIEnabled

# Disable press-and-hold for character alternatives in favor of key repeat
#defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Maximum keyboard repeat rate
#defaults write NSGlobalDomain KeyRepeat -int 0

# Show icons for hard drives, servers, and removable media on the desktop
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

# Finder: show hidden files by default
defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
#defaults write com.apple.finder ShowStatusBar -bool true

# Display full POSIX path as Finder window title
#defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Show item info near icons on the desktop and in other icon views
#/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
#/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
#/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

# Enable snap-to-grid for icons on the desktop and in other icon views
#/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
#/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
#/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

# Add 'Path' button to Finder toolbar right after 'Back/Forward'
#/usr/libexec/PlistBuddy -c 'Add "NSToolbar Configuration Browser:TB Item Identifiers:1" string "com.apple.finder.PATH"' ~/Library/Preferences/com.apple.finder.plist

# Use list view in all Finder windows by default
#defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Enable the Develop menu, Web Inspector, and context menu item for the
# Inspector in Safari.
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true


echo "Restart the computer now for good effect :)"
